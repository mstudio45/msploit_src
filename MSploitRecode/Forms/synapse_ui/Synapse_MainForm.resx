<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABRHVYAThxSB1MfWD1TIFgcVCBZAAAAAAAAAAAAMQ4zBDoQPAc8Ez8NPRNAEjwTPwhCFUUADAALAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABQHVYATBtSA1UfWzNWIF2YVyBd51MhWaNFGEl8RRdIiUUXSJhEF0ilRBdIsUQXR75EF0fKQhZFaFYe
        WQAsDS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABQH1YAFBUcAFcgXilZIV+NWSFg5VohYf9aIWH/VyNe/0obTv9HGUv/RxlL/0cYS/9HGEr/RhhK/0YY
        Sf9FF0jBPxVDD0IWRgADAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAA8AKwstACwOLQIlCicCAAAAAAEB
        AwAAAAAAAAAAAFMgWgBIIE4CWiFillwiZP9cImT/XCJk/1siY/9eJGb/UyFZ/0kZTv9JGU7/SRlN/0gZ
        Tf9IGUz/RxlM/0YYSvFEF0dASBlMAAoACgAAAAAAAAAAAAAAAAAAAAAAAAAAAGEubAAcABcAYSprXUob
        T6RHGUyRSBpNgEgZTWZGGUsTSRpPAF4iZwBbIGNcXiJm+l4jZ/9fI2j/byh3/44wlP96LH//ShpP/0kZ
        Tv9JGU7/SRlO/0kZTv9JGU7/ShlO/0kZTYr///8ASBZKAAAAAAAAAAAAAAAAAAAAAAAAAAAAg0GVAJJK
        pwh9O421VCFb/0kbT/9KG1D/ShtQ+kkaTlhNGVMAjZ2eEn1wi2BmL3Dwbyh4/4w0k/+jQKn/qUav/5tA
        of9yKXj/diR6/3okf/+AJoT/hCiI/4kpjP+OKpH/kSqUu4wnjQmPKZAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACKRJ0AiEOcJItEn+BlLHH/ShtQ/0sbUf9LG1H/TyRWr46Vn2+Rm6PHkJih9Id1lv6UcqH/m4Go/5qL
        p/+YkaX/mIyl/5p+pv+ia6v/rVW0/7g9vP+6NL3/uTS8/7g0uv+1M7e+pS6mCqowqwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAH9JogB+SKAzjEik7Yw7m/+BKIf/eyeB/3Qkev9yOXr6kJOh/JWgqP+cpa3/rLS6/7vE
        x//GztD/zNTV/8/V1//L0tP/wsrL/7K6vf+gpK3/oIKr/7BHs/+6NL3/uTS8/7U0uLigMKMIpDGnAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAXlWoAFtVpiOCTKjirT+5/8M3x//EN8b/szi97pl1q8ijqrT/vcXK/9Xa
        3f/g5eb/4+jp/+Po6f/j6On/4ufp/+Ln6P/i5+j/4OXm/9fd3v+7xMb/mICb/607rv+8NcD/uDS7rZUr
        mQWdLqEAAAAAAAAAAAAAAAAAAAAAAAAAAABRWqoARF2pFnVSr9OyPMP/szfO/6A31f9zONH4cnm0rdfe
        3+7k6er/5Onr/+Tp6v/k6er/5Onq/+Po6v/j6Or/4+jp/+Ln6f/i5+j/4ufo/+Hm5//Bxcf/nleg/701
        wv+7NcCplyehA6IsrAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFaqgBLYaAMWla7wVo64P9GNOz/ODTw/zI0
        8f9EScvT0tjfwuXr7P/l6uz/5ers/+Xq7P/l6uz/5Orr/OTp6/3k6ev/5Onr/+Po6v/j6On/4ufp/9/m
        5f+4irT/vji4/7E3o8RwM0oQdjVSAAkAAAAAAAAAAAAAAAAAAAAAAAAATlakAFtkiQRQWb+tNjvp/zA0
        8/8xNfP/MjX1/zQ45fiFjMes5+3t7ebr7f/m6+3k5evtrOXr7Xfk6uxa5evtXeLo6pPh5un05ers/+Tp
        6//j6Or/4+rr/9q8wv/JTGD/vEJK5KA9OSimQDwADwIAAAAAAAAAAAAAAAAAAAAAAABDS40ATlb/AFNc
        vZc6P+b/MTT0/zI19P8yNfX/Mzb0/0VL0MrY3uSf6O3vhObs7izq8fIF2uLkAPX//wCDjpoPpbG9fMfR
        2fjl6uz/5evs/+Tq6//k6uz/4M7N/81XTf/GRDihuT81CMNDOAAJAQAAAAAAAAAAAAAAAAAAAAAAACYq
        WQBaZNIAVV+8gD5D5P8yNfb/Mzb2/zM29v8zNvf/Njvq8VNax0gAAH8AeYKMA5egqhqbpbBInKexhZ6p
        s8iirrn5vMfR/+Tq7f/m6+3/5evs/+Xs7f/gy8r/zVdO5sRBNzbIRjwAXiAfAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFyI9AFpkxABXYrppQUfg/zI19/8zNvb/Mzb3/zM3+P8zNvf/Q0ninZ6osmSeqbSjnqm01p+p
        tPWeqbT/oKu1/6u1v//R2d7/5+3v/+fs7v/m6+3/5e3v/96zsf/MT0aKmxUJArxCOQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGFCsAWWTAAFhkuVNES936MzX3/zM29/8yNvj/Mzf5/0VK8f90fdP7nqq2/aCr
        tf+irbj/qbS9/7fAyP/I0Nb/3OPm/+jt7//o7e//5+zu/+fs7v/l5+j/2Y6K2Mg9MybMTEMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEGBABaZL4AW2W3PkhP2fMzNvf/Mjb4/z5D9P9ocN//k57E/6Ww
        u/+wusP/wMnQ/9HZ3v/f5en/6O3v/+rv8f/q7/H/6e7w/+jt7//n7e//5+7w/+HAv/3SZF10////ALpH
        PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDFqAE1kxQBHZsRBSVTV8jM29/9DSPL/iZPR/6ez
        v/+6w8r/1Nvg/+Tq7f/q7/H/6/Dy/+vw8v/q7/H/6e/x/+nu8P/p7vD/6O3w/+ju8f/kzsz/1nRuyMg9
        MxnMSkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgYtkAG2HZCSZn3KNBWdj/Oj30/4CK
        2v+wvMX/zNTa/+br7v/q8PL/6u/x/+rv8f/q7/H/6u/x/+nv8f/p7vD/6e/x/+nu8v/p6+b/7d+s/+OV
        WPfNRz1d3lZHAK08NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH1nBACFo5gAgZNxVIGfg9DJc
        3v9ZYOn/rLjN/9HZ3v/o7fD/6e7w/+nu8P/p7vH/6e/x/+nu8f/p7vH/6e7w/ujt7/Lg4Nz44dSv//HQ
        ZP/1xjH/7rApydJkORPVaTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAImSgAhY9sAIGDWGiBk
        3ccgZuD/K2fj/4qa3f/I0tj/5uzu/+jt7//o7e//6e7w/+nu8P/o7e/56O7w3eju8K3o7vBz6e7wPL6l
        f6bTrVH/9cQm//XDJ//zwifP7bknFfDAJwDyDAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzV/ACFm
        4wAgYthpIWTc/SBm3/8xgu//qMPf/93j5v/n7O7/5+zu/+ft7//o7e/96e7wvurv8Vnu8/Qf////BEFO
        XQGNnK8frZd2aNSsS/f1wyf/9MIn//PAJuzuuiYy8sImAMw5EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAALLmUAIGPdACBh1lYhYtr5IG/m/y6P8f+rx9r/5Onr/+br7f/m6+3/5+zu/97j5u+yusBni5SeKpKb
        pS+XoatRm6Wwlp2os96eoqWV2q9D0/TBJv/twib/6cAl7O+6JUX0xSUAzzocAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAgX9MAIF3RHCBk2tYhgPT/Iozr/467xv/l6ev/5Orr/+Xq7P/m7O3/0tnc/pym
        rvWXoKnrmKGr7Jmjrfmapa//nqiy/6qyvdazuVCti9Al/2vYJP9m1iOa/6omCd7BKADcJgoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACFczQAlAGoBIHTphCCH+/ceiO//X6Ox/97l5P/j6Or/4+nq/+Tp
        6//g5uj/v8bL/6evtv+jrLT/pq+3/7O7wv/J0NX/29/k+5nHobAw2ibuLuEi/y3eInwz6xwABYxEAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI1rDAB+I/QAgg/gMH4b6Vx6G+MM0jbP8vtLO/+To
        6f/i5+j/4ufp/+Po6f/i5+n/3ePk/9vg4v/c4uT/4ebo/+Po6v/j5+n/zNnU1D/XNr8u3iDiL9shXy/m
        HwAoqyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNr4wA1jr4ALn7bHSuX
        oslpuaj/2eDg/+Lm5//h5uf/4ebn/+Hm5//h5uf/4ufo/+Hm5//h5uf/4ebn/+Dl5v/d4uTvqtqsUB3b
        DR4t2iANMN4hABDGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE59
        YgAA//8ANbGYgCHWtP9v0L3/y93a/+Hj5P/h5OX/4OTl/9/k5f/f5OX/3+Tl/9/k5P/e4+T83uPj2t3i
        43rb4OET3OLiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADeqkgA5pI47Hd+77hfqw/9B3b7/huHQ/7Ll3P/G497+1+Lh8d3h4uPd4eLS3OHiqtzh
        4Wnb4OAjz9TUAtXa2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAP5OAAESIdw4f2LO/Fe3E/xPtxP8W7MT8JuzG2Evpyouo4tc/3d7fJdne
        3hbU2NkF8vb3AMTLywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHfmoAAP/tABzZsXcU6b/zFOrAvxXrwGoR670gAOWmAgPo
        sQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV5bgAGd6zJhXmuVEX5bYSAP/8ACLY
        oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//8cH//8AB//+AAP+fAAD/gYAA/wEAAH8AAAB/AAAAfwAAAH8AAAB/AA
        AAfwAAAH+ADAB/gEAA/4AAAP+AAAH/gAAD/4AAA/8AAAf/AAAH/gAAB/4AAAf+AAAH/gAAB/4AAA//AA
        AP/8AAD//gAD//4AB//+AD///wP///8f//8=
</value>
  </data>
</root>